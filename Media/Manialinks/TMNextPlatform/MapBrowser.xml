<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<manialink version="3">
<stylesheet>
	<style id="LabelWelcome" posn="-10 10"  size="57 8" style="TextTitle3" textfont="GameFontExtraBold" textsize="4" sizen="40 5"/>
	<style id="LabelActivity" posn="-10 3" sizen="56 10" style="TextTitle2" textfont="GameFontRegular"/>		
	<style class="ModernButton" style="CardButtonMediumXL" size="76 12" scale="1.46"/>
	<style class="ModernIcon" size="10 10" z-index="1" pos="1 -1"/>
	<style class="ModernButtonText" size="55 12" textcolor="FFF" opacity="0.8"  pos="17 -6" z-index="1" style="TextButtonNav" halign="left" valign="center2" textsize="2.5"/>
</stylesheet>

<framemodel id="Item">
	<label pos="-52 0" z-index="2" size="80 5" text="_map_name_" halign="left" textfont="GameFontRegular" textemboss="1"/>
	<label pos="52 0" z-index="2" size="24 5" text="???" halign="right" textfont="GameFontRegular" textemboss="1"/>
	<quad class="MapButtonQuad" pos="0 3" z-index="1" size="220 20" scale=".5" style="UICommon128_1" substyle="BgFrameTilted1" scriptevents="1" halign="center" bgcolor="FFFFFFFF" opacity=".9"/>
</framemodel>		

<frame z-index="-1" id="FrameMenuCommon" >	
	<quad posn="-160 0.5" sizen="80.7 200" z-index="-5"  substyle="" valign="center" bgcolor="272727FF" opacity=".6"/>
	<quad posn="-161 90" sizen="82 34" z-index="-4"  style="UICommon128_1" substyle="BgDialogTitle"  opacity=".8" valign="top" hidden="1"/>
	<frame id="MainPanel" z-index="-4" pos="-130 70.5">				
		<quad style="UICommon64_2"  sizen="16 16" pos="-28 12" substyle="Edit_light"/>
		<label id="LabelWelcome" text="Local Play" posn="-10 10" sizen="56 8" translate="1"/>
		<label id="LabelActivity" text="Select a map" posn="-10 3" sizen="56 10" translate="1" autonewline="1"/>
	</frame>	

	<frame pos="-158 -68.75">
		<quad class="ModernIcon" style="UICommon64_1" substyle="ArrowLeftSlim_light"/>
		<label class="ModernButton" id="xko" scriptevents="1"/>
		<label class="ModernButtonText" text="Back" translate="1" />
	</frame>
</frame>

<frame id="ModernMenu" pos="-158 40">
    <frame>
        <quad class="ModernIcon" style="UICommon64_1" substyle="Plus_light"/>
        <label class="ModernButton" text=" " id="NewMapBTN" scriptevents="1"/>
        <label class="ModernButtonText" text="New Map" translate="1" />
    </frame>
    <frame pos="0 -16">
        <quad class="ModernIcon" style="UICommon64_1" substyle="SteeringWheel_light"/>
        <label class="ModernButton" text=" " id="LocalServerBTN" scriptevents="1"/>
        <label class="ModernButtonText" text="Local Network" translate="1" />
    </frame>
</frame>

<frame id="MapListFrame">
			<frameinstance id="1" modelid="Item" pos="0 55" z-index="5" hidden=""/>
			<frameinstance id="2" modelid="Item" pos="0 44" z-index="5" hidden="1"/>
			<frameinstance id="3" modelid="Item" pos="0 33" z-index="5" hidden="1"/>
			<frameinstance id="4" modelid="Item" pos="0 22" z-index="5" hidden="1"/>
			<frameinstance id="5" modelid="Item" pos="0 11" z-index="5" hidden="1"/>
			<frameinstance id="6" modelid="Item" pos="0 0"   z-index="5" hidden="1"/>
			<frameinstance id="7" modelid="Item" pos="0 -11" z-index="5" hidden="1"/>
			<frameinstance id="8" modelid="Item" pos="0 -22" z-index="5" hidden="1"/>
			<frameinstance id="9" modelid="Item" pos="0 -33" z-index="5" hidden="1"/>
			<frameinstance id="10" modelid="Item" pos="0 -44" z-index="5" hidden="1"/>
			<frameinstance id="11" modelid="Item" pos="0 -55" z-index="5" hidden="1"/>
</frame>

<frame id="SelectedMapFrame" pos="109 15" hidden="">
	<label pos="0 57" z-index="2" size="70 5" id="MapNameLabel" style="TextTitle3" halign="center" text="_sel_map_" textfont="GameFontBlack" translate="1"/>
	<quad pos="0 46" z-index="0" size="70 70" halign="center" id="MapImage" bgcolor="6C6C6C05"/>
	<label pos="0 -33" z-index="0" size="70 5" text="trackmania/gamemode" id="MapModeLabel" halign="center" textfont="GameFontRegular"/>
	<label pos="0 -26" z-index="0" size="70 5" text="Author" id="MapAuthorLabel" halign="center" textfont="GameFontRegular"/>
	
	<label pos="-18 -44" z-index="0" size="10 5" text="0" halign="center" id="AuthorTimeLabel" textsize="5" textfont="GameFontRegular"/>
	<label pos="-6 -44" z-index="0" size="10 5" text="0" halign="center" id="GoldTimeLabel" textsize="5" textfont="GameFontRegular"/>
	<label pos=" 6 -44" z-index="0" size="10 5" text="0" halign="center" id="SilverTimeLabel" textsize="5" textfont="GameFontRegular"/>
	<label pos="18 -44" z-index="0" size="10 5" text="0" halign="center" id="BronzeTimeLabel" textsize="5" textfont="GameFontRegular"/>

	<quad pos="0 60" z-index="1" size="80 10" style="UICommon128_1" substyle="BgDialogTitle" halign="center" valign="top"/>
	<quad pos="0" z-index="-1" size="80 120" style="UICommon128_1" substyle="BgDialog" halign="center" valign="center"/>
	<quad pos="0 -90" z-index="-1" size="80 24" style="UICommon128_1" substyle="BgDialog" halign="center" valign="bottom" scriptevents="1"/>
	<label id="LaunchMapLabel" pos="0 -68" z-index="3" size="20 5" text="Play" style="CardButtonMediumL" halign="center" translate="1" scriptevents="1" scale="1.2"/>
	<label id="EditMapLabel" pos="0 -79" z-index="3" size="20 5" text="Edit" style="CardButtonMediumL" halign="center" translate="1" scriptevents="1" scale="1.2"/>
</frame>

<quad size="120 150" style="UICommon128_1" substyle="BgDialog" halign="center" valign="center"/>
<label pos="0 67" z-index="3" size="75 10" text="_folder_path_" id="FolderPathLabel" halign="center" valign="center2" textfont="GameFontSemiBold"/>
<quad pos="-51 72" z-index="4" size="10 10" style="UIConstruction_Buttons" substyle="Up" halign="center" valign="top" scriptevents="1" id="GoToParentFolderQuad"/>
<quad pos="-41 72" z-index="4" size="10 10" style="UICommon64_1" substyle="Parameters_light" halign="center" valign="top" scriptevents="1" id="ShowOptionsQuad"/>
<quad pos="41 72" z-index="4" size="10 10" style="Icons64x64_1" substyle="ToolTree" halign="center" valign="top" scriptevents="1" id="ShowAllSubfoldersQuad"/>
<quad pos="51 72" z-index="4" size="10 10" style="UIConstruction_Buttons" substyle="Reload" halign="center" valign="top" scriptevents="1" id="RefreshQuad"/>

<frame z-index="2" pos="0 -60">
	<quad pos="-15 -3" z-index="2" size="10 10" style="UIConstruction_Buttons" substyle="Left" scriptevents="1" id="PrevPageQuad"/>
	<label pos="0 -7.5" z-index="2" size="14 5" text="1" halign="center" valign="center" id="PageLabel" textfont="GameFontRegular"/>
	<quad pos="5 -3" z-index="2" size="10 10" style="UIConstruction_Buttons" substyle="Right" scriptevents="1" id="NextPageQuad"/>
</frame>

<frame id="OptionsFrame" z-index="20" hidden="1">
	<label pos="0 20" z-index="2" size="100 5" style="TextTitle3" halign="center" text="Options" textfont="GameFontBlack" translate="1"/>
	<quad size="130 45" style="UICommon128_1" substyle="BgDialog" halign="center" valign="center" z-index="-1"/>
	<quad size="130 10" style="UICommon128_1" substyle="BgDialogTitle" pos="0 23" halign="center"/>
	<label id="ShowOnlyPlatformMapsLabel" pos="0 11" z-index="2" size="20 5" text="Hide all non Platform maps" style="CardButtonMediumXXXL" scale="1.2" scriptevents="1" halign="center"/>
	<label pos="0 0" z-index="2" size="20 5" text="Force Platform mode" id="" style="CardButtonMediumXXXL" scale="1.2" halign="center"/>
	<label id="HideOptionsLabel" pos="0 -11" z-index="2" size="20 5" text="Close" style="CardButtonMediumXXXL" scale="1.2" halign="center" scriptevents="1"/>
</frame>

<script><!--
#Include "TextLib" as TextLib
#Const MaxMapsCount 10

declare Integer PageNb;
declare Boolean ShowAllFolders;
declare Text[] CurrentPage_AllPaths;
declare Text SelectedItemPath;
declare Boolean ShowOnlyPlatformMaps;

Void HideOptions() {
	declare OptionsFrame <=> (Page.GetFirstChild("OptionsFrame") as CMlFrame);
	OptionsFrame.Hide();
	Audio.PlaySoundEvent(CAudioManager::ELibSound::HideMenu, 0, 1.);
}

Void ShowOptions() {
	declare OptionsFrame <=> (Page.GetFirstChild("OptionsFrame") as CMlFrame);
	OptionsFrame.Show();
	Audio.PlaySoundEvent(CAudioManager::ELibSound::ShowMenu, 0, 1.);
}

Void ClearSelectedMap() {	
	declare LabelIds = ["MapModeLabel", "MapAuthorLabel", "AuthorTimeLabel", "GoldTimeLabel", "SilverTimeLabel", "BronzeTimeLabel"];
	foreach(L in LabelIds) {
		(Page.GetFirstChild(L) as CMlLabel).Value = "";
	}
    (Page.GetFirstChild("MapNameLabel") as CMlLabel).Value = "None";
	(Page.GetFirstChild("MapImage") as CMlQuad).ImageUrl = "";
}

Void SelectMap(Text _MapPath, CTaskResult_MapList _MapList) {
	ClearSelectedMap();
	if(_MapList.MapInfos.count == 0)
		return;
	
	declare CMapInfo SelectedMap;	
	foreach(Map in _MapList.MapInfos) {
		if(Map.FileName == _MapPath) {
			SelectedMap <=> Map;
			SelectedItemPath = SelectedMap.FileName;
			break;
		}
	}	
	(Page.GetFirstChild("MapNameLabel") as CMlLabel).Value = SelectedMap.Name;
	(Page.GetFirstChild("MapModeLabel") as CMlLabel).Value = SelectedMap.MapType;
	(Page.GetFirstChild("MapAuthorLabel") as CMlLabel).Value = SelectedMap.AuthorNickName;	
	
	(Page.GetFirstChild("AuthorTimeLabel") as CMlLabel).Value = ""^SelectedMap.TMObjective_AuthorTime;
	(Page.GetFirstChild("GoldTimeLabel") as CMlLabel).Value = ""^SelectedMap.TMObjective_GoldTime;
	(Page.GetFirstChild("SilverTimeLabel") as CMlLabel).Value = ""^SelectedMap.TMObjective_SilverTime;
	(Page.GetFirstChild("BronzeTimeLabel") as CMlLabel).Value = ""^SelectedMap.TMObjective_BronzeTime;
	
	(Page.GetFirstChild("MapImage") as CMlQuad).ImageUrl = "file://Thumbnails/MapUid/" ^ SelectedMap.MapUid;
}

CTaskResult_MapList LoadMapsFromFolder(Text _Path) {
	(Page.GetFirstChild("FolderPathLabel") as CMlLabel).Value = _Path;
	declare MapList = DataFileMgr.Map_GetGameList(_Path, ShowAllFolders);
	wait(!MapList.IsProcessing);
	return MapList;
}

Boolean IsMap(Text FileName) {
	return TextLib::EndsWith(".map.gbx", FileName, False, False);
}

Void ClearMaps() {
	declare MapListFrame <=> (Page.GetFirstChild("MapListFrame") as  CMlFrame);
	for(i, 0, MaxMapsCount) {
		declare Frame = (MapListFrame.Controls[i] as CMlFrame);
		Frame.Hide();
	}
	SelectedItemPath = "";
}

Void DisplayMaps(CTaskResult_MapList _MapList) {
	ClearSelectedMap();
	ClearMaps();
	CurrentPage_AllPaths.clear();
	declare MapListFrame <=> (Page.GetFirstChild("MapListFrame") as  CMlFrame);
	declare MapCount = _MapList.MapInfos.count;
	declare FolderCount = _MapList.SubFolders.count - PageNb * MaxMapsCount;
	
	log("MapCount: " ^ MapCount ^ "FolderCount: " ^ FolderCount);
	
	if(ShowAllFolders || FolderCount < 0)
		FolderCount = 0;
	
	// Sort subfolders first, then maps
	for(i, 0, MaxMapsCount) {
		declare index = i + PageNb * MaxMapsCount;
		if(index >= FolderCount)
			break;
		declare Frame = (MapListFrame.Controls[i] as CMlFrame);
		Frame.Show();
		declare SubfolderSplits = TextLib::Split("\\", _MapList.SubFolders[index]);
		(Frame.Controls[0] as CMlLabel).Value =  SubfolderSplits[SubfolderSplits.count - 1];
		(Frame.Controls[1] as CMlLabel).Value = "";
		(Frame.Controls[2] as CMlQuad).ModulateColor = <0.7, 0.7, 0.7>;
		CurrentPage_AllPaths.add(_MapList.SubFolders[index]);
		//log("Folder: " ^ _MapList.SubFolders[index]);
	}
	
	for(i, FolderCount, MaxMapsCount) {
		declare index = i + PageNb * MaxMapsCount - FolderCount;
		if(index >= MapCount)
			break;
		declare MapInfo <=>  _MapList.MapInfos[index];
		if(ShowOnlyPlatformMaps) {
			if(!TextLib::Find("Platform", MapInfo.MapType, False, False))
				continue;
		}
		declare Frame = (MapListFrame.Controls[i] as CMlFrame);	
		Frame.Show();
		(Frame.Controls[0] as CMlLabel).Value = MapInfo.Name;
		(Frame.Controls[1] as CMlLabel).Value = MapInfo.MapType;
		(Frame.Controls[2] as CMlQuad).ModulateColor = <0.99, 0.99, 0.99>;
		CurrentPage_AllPaths.add(MapInfo.FileName);
		//log("Map: " ^ _MapList.MapInfos[index].Name);
	}
}

***OnMouseClick***
***
if (Event.Control.HasClass("MapButtonQuad")) {
	LastClickedControl = Event.Control.Parent.ControlId;
	ProceededClick = "";
}
if(TextLib::Length(Event.Control.ControlId) > 2)	{
	LastClickedControl = Event.Control.ControlId;
	ProceededClick = "";
}

if (Event.ControlId == "xko") {
	SendCustomEvent("MLHook_menu_action", ["main_menu"]);
}
***

***OnMouseOver***
***
if (Event.Control.HasClass("MapButtonQuad"))	{
	for(i, 0, MaxMapsCount) {
		declare Quad = (((Page.GetFirstChild(""^(i+1)) as CMlFrame).Controls[2]) as CMlQuad);
		Quad.Opacity = .9;
	}
	declare SelQuad = (((Page.GetFirstChild(""^Event.Control.Parent.ControlId) as CMlFrame).Controls[2]) as CMlQuad);
	SelQuad.Opacity = .7;
}
*** 

Void DoNothing(){}

main() {
	declare LastClickedControl = "";
	declare ProceededClick = "";
	declare Path = "";
	PageNb = 0;
	declare MapList = LoadMapsFromFolder(Path);
	declare PageLabel <=> (Page.GetFirstChild("PageLabel") as CMlLabel);
	EnableMenuNavigation(True, True, Page.GetFirstChild("xko"), 1);
	DisplayMaps(MapList);
	
	while(True) {
		yield;
		
		if(LastClickedControl != ProceededClick) {
		
			if(TextLib::ToInteger(LastClickedControl) >= 1 && TextLib::ToInteger(LastClickedControl) <= 11)	{
				declare SelectedItemIndex = TextLib::ToInteger(LastClickedControl) - 1;
				declare ItemPath = CurrentPage_AllPaths[SelectedItemIndex];
				Audio.PlaySoundEvent(CAudioManager::ELibSound::Valid, 0, 1.);
				if(!IsMap(ItemPath)) {
					PageNb = 0;
					Path = ItemPath;
					MapList = LoadMapsFromFolder(Path);
					DisplayMaps(MapList);
				}
				else {
					SelectMap(ItemPath, MapList);
				}
			}
			if(LastClickedControl == "GoToParentFolderQuad") {
				PageNb = 0;
				PageLabel.Value = "" ^ PageNb+1;
				Path = MapList.ParentPath;
				MapList = LoadMapsFromFolder(Path);
				DisplayMaps(MapList);
			}
			if(LastClickedControl == "RefreshQuad") {
				ClearMaps();
				DataFileMgr.Map_RefreshFromDisk();
				sleep(100);
				MapList = LoadMapsFromFolder(Path);
				DisplayMaps(MapList);
			}
			if(LastClickedControl == "ShowAllSubfoldersQuad") {
				ShowAllFolders = !ShowAllFolders;
				(Page.GetFirstChild("ShowAllSubfoldersQuad") as CMlQuad).StyleSelected = ShowAllFolders;
				MapList = LoadMapsFromFolder(Path);
				DisplayMaps(MapList);
			}
			if(LastClickedControl == "PrevPageQuad") {
                if(PageNb > 0) {
				    PageNb -= 1;
                    MapList = LoadMapsFromFolder(Path);
                    DisplayMaps(MapList);
                    PageLabel.Value = "" ^ PageNb+1;
                }
			}
			if(LastClickedControl == "NextPageQuad") {
				if(CurrentPage_AllPaths.count >= 11) {
					PageNb += 1;
					MapList = LoadMapsFromFolder(Path);
					DisplayMaps(MapList);
					PageLabel.Value = "" ^ PageNb+1;
				}
			}
			if(LastClickedControl == "LaunchMapLabel") {
				if(IsMap(SelectedItemPath)) {
					Audio.PlaySoundEvent(CAudioManager::ELibSound::Start, 0, 1.);
					TitleControl.PlayMap(SelectedItemPath, "Modes\\TrackMania\\LegacyMode.Script.txt", "");
				}
			}
			if(LastClickedControl == "EditMapLabel") {
				if(IsMap(SelectedItemPath)) {
					Audio.PlaySoundEvent(CAudioManager::ELibSound::Start, 0, 1.);
					TitleControl.EditMap(SelectedItemPath, "", "");
				}
			}
			if(LastClickedControl == "NewMapBTN") {
				TitleControl.EditNewMap("Stadium", "", "", "", "Trackmania\\Platform", "", "");
			}
			if(LastClickedControl == "LocalServerBTN") {
				SendCustomEvent("MLHook_menu_action", ["local_server"]);
			}
			if(LastClickedControl == "ShowOnlyPlatformMapsLabel") {
				if(!ShowOnlyPlatformMaps)
					ShowOnlyPlatformMaps = True;
				else
					ShowOnlyPlatformMaps = False;
				HideOptions();
			}
			if(LastClickedControl == "HideOptionsLabel") {
				HideOptions();
			}
			if(LastClickedControl == "ShowOptionsQuad") {
				ShowOptions();
			}
			ProceededClick = LastClickedControl;
		}
		
		foreach (Event in PendingEvents) {
			if(Event.Type ==CMlScriptEvent::Type::MouseClick)	{
				+++OnMouseClick+++
			}
			if(Event.Type ==CMlScriptEvent::Type::MouseOver)	{
				+++OnMouseOver+++
			}
		}
	}
}
--></script>
</manialink>